<base:BaseForm x:Class="MangaReader.Table"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local ="clr-namespace:MangaReader"
        xmlns:tb="clr-namespace:Hardcodet.Wpf.TaskbarNotification;assembly=Hardcodet.Wpf.TaskbarNotification"
        xmlns:ui="clr-namespace:MangaReader.UI"
        xmlns:base="clr-namespace:MangaReader.UI.MainForm"
        xmlns:resx="clr-namespace:MangaReader.Properties"
        xmlns:services="clr-namespace:MangaReader.Services"
        Closing="Window_OnClosing"
        StateChanged="Table_OnStateChanged"
        Icon="Icons/main.ico"
        Title="{x:Static resx:Strings.Title}"  Height="350" Width="525">

    <Window.Resources>
        <local:UpdateImageConverter x:Key="UpdateImageConverter"/>
        <local:CompletedImageConverter x:Key="CompletedImageConverter"/>
        <local:UrlTypeConverter x:Key="UrlTypeConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ui:MultiSelectComboBox x:Name="MangaType" Grid.Column="3" SelectionChanged="FilterChanged"
                            ItemsSource="{Binding Path=(services:LibraryFilter.AllTypes), Mode=OneTime}"
                            SelectedItems="{Binding Path=(services:LibraryFilter.AllowedTypes), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <CheckBox x:Name="Uncompleted" Content="Незавершенная" Grid.Column="2" Click="FilterChanged"
              IsChecked="{Binding Path=(services:LibraryFilter.Uncompleted), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <CheckBox x:Name="OnlyUpdate" Content="Обновляемая" Grid.Column="1" Click="FilterChanged"
              IsChecked="{Binding Path=(services:LibraryFilter.OnlyUpdate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBox x:Name="NameFilter" TextWrapping="Wrap" Grid.Column="0" TextChanged="FilterChanged"
             Text="{Binding Path=(services:LibraryFilter.Name), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <ListView x:Name="FormLibrary" 
              Grid.Row="1"
              ItemsSource="{Binding View}"
              MouseDown="ListView_MouseDown"
              SelectionMode="Single"
              ui:GridViewColumnResize.Enabled="True"
              ui:GridSort.AutoSort="True" >
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <EventSetter Event="MouseRightButtonUp" Handler="ListViewItem_OnMouseRightButtonUp"/>
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="Mangas_clicked"/>
                    <Setter Property="AllowDrop" Value="True"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">

                                <Border SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}">

                                    <Grid>

                                        <!-- This is used when GridView is put inside the ListView -->
                                        <GridViewRowPresenter Content="{TemplateBinding ContentControl.Content}"
                                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>

                                        <!-- This is used for ListView that does not use GridView -->
                                        <ContentPresenter x:Name="contentPresenter"
                                                          Content="{TemplateBinding ContentControl.Content}"
                                                          Visibility="Collapsed"
                                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    </Grid>

                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                        <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent" />
                                    </Trigger>

                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn DisplayMemberBinding="{Binding Path=Url, Converter={StaticResource UrlTypeConverter}}"/>
                        <GridViewColumn>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Image Source="{Binding IsCompleted, Converter={StaticResource CompletedImageConverter}}" Width="16" Height="16"/>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static resx:Strings.Manga_Name}" DisplayMemberBinding="{Binding Path=Name}"
                            ui:GridViewColumnResize.Width="*"
                            ui:GridSort.PropertyName="Name"
                            ui:GridSort.ShowSortGlyph="True"/>
                        <GridViewColumn Header="{x:Static resx:Strings.Manga_Update}"
                            ui:GridSort.PropertyName="NeedUpdate">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Image Source="{Binding NeedUpdate, Converter={StaticResource UpdateImageConverter}}" Width="16" Height="16"/>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{x:Static resx:Strings.Manga_Downloaded}"
                            ui:GridSort.PropertyName="Downloaded">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ProgressBar Maximum="100" Value="{Binding Downloaded}"/>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StatusBar x:Name="StatusBar" Grid.Column="0">
                <StatusBarItem>
                    <TextBlock x:Name="TextBlock" TextAlignment="Center" Text="{Binding Path=(services:Library.Status), Mode=TwoWay}"/>
                </StatusBarItem>
            </StatusBar>
            <Button Content="{x:Static resx:Strings.Manga_Action_Update}" 
                Grid.Column="1"
                x:Name="UpdateButton" 
                Click="Update_click"/>
            <Button Content="{x:Static resx:Strings.Library_Action_Add}" 
                Grid.Column="2"
                x:Name="AddButton" 
                Command="New"/>
            <Button Content="{x:Static resx:Strings.Library_Action_Settings}"  
                Grid.Column="3"
                x:Name="SettingsButton" 
                Command="ui:Command.ShowSettings"/>
        </Grid>
    </Grid>
</base:BaseForm>