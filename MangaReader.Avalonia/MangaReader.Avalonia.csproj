<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <ApplicationIcon />
    <StartupObject />
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\VersionInfo.cs" Link="Properties\VersionInfo.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="**\*.xaml.cs">
      <DependentUpon>%(Filename)</DependentUpon>
    </Compile>
    <EmbeddedResource Include="**\*.xaml">
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" Version="0.6.1" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="0.6.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MangaReader.Core\MangaReader.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Dialogs.Avalonia">
      <HintPath>lib\Dialogs.Avalonia.dll</HintPath>
    </Reference>
    <Reference Include="Dialogs.Interfaces">
      <HintPath>lib\Dialogs.Interfaces.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <Plugins Include="$(ProjectDir)\Bin\$(ConfigurationName)\netcoreapp2.0\Plugins\*" />
  </ItemGroup>

  <!-- Copy native libs - skiasharp and sqlite interops -->
  <Target Name="CopyNativeLibraries" AfterTargets="Publish">
    <PropertyGroup>
      <UserRoot>$(userprofile)</UserRoot>
      <UserRoot Condition="'$(userprofile)' == ''">$(HOME)</UserRoot>
    </PropertyGroup>
    <ItemGroup>
      <Library Include="$(UserRoot)\.nuget\packages\skiasharp\1.57.1\runtimes\osx\native\libSkiaSharp.dylib" />
      <Library Include="$(UserRoot)\.nuget\packages\skiasharp\1.57.1\runtimes\win7-x64\native\libSkiaSharp.dll" />
      <Library Include="$(UserRoot)\.nuget\packages\avalonia.skia.linux.natives\1.57.1.3\runtimes\linux-x64\native\libSkiaSharp.so" />
    </ItemGroup>
    <Copy SourceFiles="@(Library)" DestinationFiles="@(Library-&gt;'$([System.IO.Path]::GetFullPath('$(PublishDir)'))\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(Plugins)" DestinationFiles="@(Plugins-&gt;'$([System.IO.Path]::GetFullPath('$(PublishDir)'))\Plugins\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

</Project>
